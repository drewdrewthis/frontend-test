"use strict";function getData(e){return $.ajax({dataType:"json",url:"https://www.deskbookers.com/nl-nl/sajax.json?q=Amsterdam&type=-&people=any&favorite=0&pid=&sw=52.293753%2C4.634942&ne=52.455562%2C5.162286&ids=17201%2C19640%2C13692%2C13691%2C12136%2C17938%2C15292%2C14886%2C14885%2C14884%2C14883%2C15730%2C15353%2C15351%2C15330%2C15080%2C17290%2C15454%2C15451%2C15379"})}function setDimensionsForResponsiveElements(){$("ul.results-list").css("width",window.innerWidth/5*$(".result-item").length+"px")}function createCarousel(e,t){function a(){var e='\n            <div class="control-wrapper left">\n                <div class="control left-control">\n                    <i class="fa fa-chevron-left" aria-hidden="true"></i>\n                </div>\n            </div>\n            <div class="control-wrapper right">\n                <div class="control right-control">\n                    <i class="fa fa-chevron-right" aria-hidden="true"></i>\n                </div>\n            </div>\n        ';n.append(e),n.find(".right-control").on("click",function(){n.nextImage()}),n.find(".left-control").on("click",function(){n.prevImage()})}var n=$(e);return n.current_image_index=0,n.images=t,n.goToImage=function(e){$(".carousel-item").fadeOut(2e3),$('.carousel-item[data-id="'+e+'"]').fadeIn(2e3),0===n.images.length?n.find(".control").hide():n.find(".control").show()},n.updateSlides=function(e,t){n.images=e,n.find("ul").html(""),e.forEach(function(e,a){"string"==typeof e&&n.find("ul").append('<li \n                    id="image-'+a+'" \n                    data-id="'+a+'" \n                    class="carousel-item" \n                    style="background-image:url(\''+e+'\')">\n                        <h1 class="headline">'+(t[a]||"Headline #"+(a+1))+"</h1>\n                    </li>\n                ")}),n.goToImage(0)},n.nextImage=function(){n.images[n.current_image_index+1]?n.goToImage(++n.current_image_index):(n.goToImage(0),n.current_image_index=0)},n.prevImage=function(){n.images[n.current_image_index-1]?n.goToImage(--n.current_image_index):(n.goToImage(n.images.length-1),n.current_image_index=n.images.length-1)},a(),n.append("<ul></ul>"),n.updateSlides(t,["Fast, Easy, Flexible","Book one of our spaces"]),setInterval(function(){n.is(":hover")||n.nextImage()},6e3),n}function updateResults(e){console.log("Update Results",e),e.map(function(e,t){var a=e.url,n=e.name,o=e.location_name,i=e.rating||"-",r=e.day_price?"$"+e.day_price+"/day":"",s=e.image_urls2[0];$(".results-list").append('<li \n            id="location-'+t+'" \n            class="result-item" \n            style="background-image:url(\''+s+'\'); display: none;">\n                <a href="'+(a||"#")+'">\n                    <ul class="location-info">\n                        <li>'+n+"</li>\n                        <li>"+o+"</li>\n                        <li>Score: "+i+"</li>\n                        <li>"+r+"</li>\n                    </ul>\n                </a>\n            </li>"),$("#location-"+t).fadeIn(1e3*t)})}function revealResultsArea(){$("html, body").animate({scrollTop:$(".results-section").height()},1e3)}function createResultsArea(){return{update:updateResults,scrollTo:revealResultsArea}}function createSearchList(e){var t={},a=e.reduce(function(e,t){return e.concat([t.name,t.location_name,t.location_city])},[]).filter(function(e){return!t[e]&&(t[e]=!0,!0)});return a.sort(function(e,t){return e.localeCompare(t)}),a}function predictSearch(e){var t=app.model.location_names.filter(function(t){return t.toLowerCase().includes(e.toLowerCase())});fillPredictor(".predictive-results",t.slice(0,5))}function fillPredictor(e,t){var a=$(e);a.html(""),a.append('\n            <li data-id="" \n                class="predictive-item"\n                data-name="All">Search all locations..</li>');var n=!0,o=!1,i=void 0;try{for(var r,s=t[Symbol.iterator]();!(n=(r=s.next()).done);n=!0){var l=r.value;a.append('\n            <li data-id="" \n                class="predictive-item"\n                data-name="'+l+'">'+l+"</li>")}}catch(c){o=!0,i=c}finally{try{!n&&s["return"]&&s["return"]()}finally{if(o)throw i}}$(".predictive-item").on("click",function(){var e=$(this).data("name");"All"===e?($('#location-search-form input[type="text"]').val(""),processSearch(),revealResultsArea(),$(".predictive-box").hide()):($('#location-search-form input[type="text"]').val(e),$(".predictive-box").hide())})}function createResultsList(e){var t=app.model.raw_data.rows;if(!e)return t;var a=t.filter(function(t){return t.name===e||t.location_name===e||t.location_city===e});return a}function processSearch(e){$(".results-list").html(""),$(".results-section .loader").show(),$('#location-search-form input[type="text"]').val(""),$.when(getData(e)).then(function(t){app.model.raw_data=t,app.model.locations=createResultsList(e),app.components.results_area.update(locations),app.model.locations,setDimensionsForResponsiveElements(),$(".results-section .loader").fadeOut()}).fail(function(t){console.error("Could not connect to API.","Using session storage..",t),app.model.locations=createResultsList(e),app.components.results_area.update(app.model.locations),setDimensionsForResponsiveElements(),$(".results-section .loader").fadeOut()})}function setEventHandlers(){$("#location-search-form").submit(function(e){var t=$('input[type="text"]').val();e.preventDefault(),t&&(processSearch(t),$('input[type="text"]').val(""),revealResultsArea())}),$('#location-search-form input[type="text"]').focus(function(){$('#location-search-form input[type="text"]').keyup(function(e){var t=$('#location-search-form input[type="text"]').val();predictSearch(t),$(".predictive-box").show()})}),$('#location-search-form input[type="text"]').focusout(function(){$(".predictive-box").is(":hover")||$(".predictive-box").hide()}),$(".predictive-item").on("click",function(){$(".predictive-results").html(""),$(this).data("name"),$(".predictive-box").hide()})}var max_results=20,app={model:{raw_data:void 0,locations:void 0,location_names:void 0},components:{main_carousel:void 0,results_area:void 0},init:function(){if(sessionStorage.getItem("location_data")){var e=sessionStorage.getItem("location_data");app.model.raw_data=JSON.parse(e),console.log("Using data from session storage..",app.model.raw_data),app.setUp()}else $(".loader").show(),app.setData()},setData:function(){$.when(getData()).then(function(e){console.log("Retrieved data",e),sessionStorage.setItem("location_data",JSON.stringify(e)),app.model.raw_data=e,app.setUp(),$(".loader").fadeOut()})},setUp:function(){app.model.locations=app.model.raw_data.rows;var e=app.model.locations.slice(0,Math.min(max_results,app.model.locations.length-1)),t=app.model.locations.reduce(function(e,t){return e.concat(t.image_urls)},[]);$(document).ready(function(){app.model.location_names=createSearchList(app.model.raw_data.rows),app.components.main_carousel=createCarousel("carousel",t),app.components.results_area=createResultsArea(),app.components.results_area.update(e),$(".search-box").show(),setEventHandlers(),setDimensionsForResponsiveElements()})}};app.init(),$(window).resize(function(){setDimensionsForResponsiveElements()});
//# sourceMappingURL=data:application/json;base64,
