"use strict";function getData(e){return $.ajax({dataType:"json",url:"https://www.deskbookers.com/nl-nl/sajax.json?q=Amsterdam&type=-&people=any&favorite=0&pid=&sw=52.293753%2C4.634942&ne=52.455562%2C5.162286&ids=17201%2C19640%2C13692%2C13691%2C12136%2C17938%2C15292%2C14886%2C14885%2C14884%2C14883%2C15730%2C15353%2C15351%2C15330%2C15080%2C17290%2C15454%2C15451%2C15379"})}function setDimensionsForResponsiveElements(){}function createCarousel(e,a){function t(){var e='\n            <div class="control-wrapper left">\n                <div class="control left-control">\n                    <i class="fa fa-chevron-left" aria-hidden="true"></i>\n                </div>\n            </div>\n            <div class="control-wrapper right">\n                <div class="control right-control">\n                    <i class="fa fa-chevron-right" aria-hidden="true"></i>\n                </div>\n            </div>\n        ';n.append(e),n.find(".right-control").on("click",function(){n.nextImage()}),n.find(".left-control").on("click",function(){n.prevImage()})}var n=$(e);return n.current_image_index=0,n.images=a,n.goToImage=function(e){$(".carousel-item").fadeOut(2e3),$('.carousel-item[data-id="'+e+'"]').fadeIn(2e3),0===n.images.length?n.find(".control").hide():n.find(".control").show()},n.updateSlides=function(e,a){n.images=e,n.find("ul").html(""),e.forEach(function(e,t){"string"==typeof e&&n.find("ul").append('<li \n                    id="image-'+t+'" \n                    data-id="'+t+'" \n                    class="carousel-item" \n                    style="background-image:url(\''+e+'\')">\n                        <h1 class="headline">'+(a[t]||"Headline #"+(t+1))+"</h1>\n                    </li>\n                ")}),n.goToImage(0)},n.nextImage=function(){n.images[n.current_image_index+1]?n.goToImage(++n.current_image_index):(n.goToImage(0),n.current_image_index=0)},n.prevImage=function(){n.images[n.current_image_index-1]?n.goToImage(--n.current_image_index):(n.goToImage(n.images.length-1),n.current_image_index=n.images.length-1)},t(),n.append("<ul></ul>"),n.updateSlides(a,["Fast, Easy, Flexible","Book one of our spaces"]),setInterval(function(){n.is(":hover")||n.nextImage()},6e3),n}function updateResults(e){console.log("Update Results",e),e.map(function(e,a){var t=e.points[0].latitude,n=e.points[0].longitude,o=e.url,i=e.name,r=e.location_name,s=e.rating||"-",l=e.day_price?"$"+e.day_price+"/day":"",c=e.image_urls2[0];$(".results-list").append('<li \n            id="location-'+a+'" \n            class="result-item" \n            style="background-image:url(\''+c+'\'); display: none;">\n                <a href="'+(o||"#")+'">\n                    <ul class="location-info">\n                        <li>'+i+"</li>\n                        <li>"+r+"</li>\n                        <li>Score: "+s+"</li>\n                        <li>"+l+"</li>\n                    </ul>\n                </a>\n            </li>"),$("#location-"+a).fadeIn(1e3*a),app.components.map.setMarker&&app.components.map.setMarker(r,t,n)})}function revealResultsArea(){$("html, body").animate({scrollTop:$(".results-section").height()},1e3)}function createResultsArea(){return{update:updateResults,scrollTo:revealResultsArea}}function initialize(){var e=new google.maps.LatLng(52.305584,4.949819),a={zoom:8,center:e,mapTypeId:google.maps.MapTypeId.ROADMAP};map=new google.maps.Map(document.getElementById("map"),a),google.maps.event.addDomListener(window,"load",initialize)}function setMarker(e,a,t){var n=new google.maps.LatLng(a,t),o=new google.maps.Marker({position:n,map:map,title:e});return o}function updateMap(e,a){var t=new google.maps.LatLng(e,a);map.setCenter(t)}function createSearchList(e){var a={},t=e.reduce(function(e,a){return e.concat([a.name,a.location_name,a.location_city])},[]).filter(function(e){return!a[e]&&(a[e]=!0,!0)});return t.sort(function(e,a){return e.localeCompare(a)}),t}function predictSearch(e){var a=app.model.location_names.filter(function(a){return a.toLowerCase().includes(e.toLowerCase())});fillPredictor(".predictive-results",a.slice(0,5))}function fillPredictor(e,a){var t=$(e);t.html(""),t.append('\n            <li data-id="" \n                class="predictive-item"\n                data-name="All">Search all locations..</li>');var n=!0,o=!1,i=void 0;try{for(var r,s=a[Symbol.iterator]();!(n=(r=s.next()).done);n=!0){var l=r.value;t.append('\n            <li data-id="" \n                class="predictive-item"\n                data-name="'+l+'">'+l+"</li>")}}catch(c){o=!0,i=c}finally{try{!n&&s["return"]&&s["return"]()}finally{if(o)throw i}}$(".predictive-item").on("click",function(){var e=$(this).data("name");"All"===e?($('#location-search-form input[type="text"]').val(""),processSearch(),revealResultsArea(),$(".predictive-box").hide()):($('#location-search-form input[type="text"]').val(e),$(".predictive-box").hide())})}function createResultsList(e){var a=app.model.raw_data.rows;if(!e)return a;var t=a.filter(function(a){return a.name===e||a.location_name===e||a.location_city===e});return t}function processSearch(e){$(".results-list").html(""),$(".results-section .loader").show(),$('#location-search-form input[type="text"]').val(""),$.when(getData(e)).then(function(a){app.model.locations=createResultsList(e),app.results_area.update(app.model.locations),$(".results-section .loader").fadeOut()})}function setEventHandlers(){$("#location-search-form").submit(function(e){var a=$('input[type="text"]').val();e.preventDefault(),a&&(processSearch(a),$('input[type="text"]').val(""),revealResultsArea())}),$('#location-search-form input[type="text"]').focus(function(){$('#location-search-form input[type="text"]').keyup(function(e){var a=$('#location-search-form input[type="text"]').val();predictSearch(a),$(".predictive-box").show()})}),$('#location-search-form input[type="text"]').focusout(function(){$(".predictive-box").is(":hover")||$(".predictive-box").hide()}),$(".predictive-item").on("click",function(){$(".predictive-results").html(""),$(this).data("name"),$(".predictive-box").hide()})}var max_results=20,maps_key="AIzaSyD6_xJymcFN1dZJUZAQiQ81lprzaZFXnWM",app={model:{raw_data:void 0,locations:void 0,location_names:void 0},components:{main_carousel:void 0,results_area:void 0,map:{map:null,center:{lat:null,lng:null},update:null,setMarker:null}},init:function(){if(sessionStorage.getItem("location_data")){var e=sessionStorage.getItem("location_data");app.model.raw_data=JSON.parse(e),console.log("Data from session storate",app.model.raw_data),app.setUp()}else $(".loader").show(),app.setData()},setData:function(){$.when(getData()).then(function(e){console.log("Retrieved data",e),sessionStorage.setItem("location_data",JSON.stringify(e)),app.model.raw_data=e,app.setUp(),$(".loader").fadeOut()})},setUp:function(){app.model.locations=app.model.raw_data.rows;var e=app.model.locations.slice(0,Math.min(max_results,app.model.locations.length-1)),a=app.model.locations.reduce(function(e,a){return e.concat(a.image_urls)},[]);$(document).ready(function(){app.model.location_names=createSearchList(app.model.raw_data.rows),console.log("Location Names",app.model.location_names),app.components.main_carousel=createCarousel("carousel",a),app.results_area=createResultsArea(),app.results_area.update(e),$(".search-box").show(),setEventHandlers(),setDimensionsForResponsiveElements()})}};app.init(),$(window).resize(function(){setDimensionsForResponsiveElements()});var map,marker;app.components.map.map=map,app.components.map.setMarker=setMarker,app.components.map.update=updateMap;
//# sourceMappingURL=data:application/json;base64,
